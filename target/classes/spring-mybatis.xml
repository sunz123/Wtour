<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--    -->
    <context:component-scan base-package="com.wtour"/>
<!--  引入spring-mvc.xml配置  -->
    <import resource="spring-mvc.xml"/>
    <!--连接池配置(数据源)-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/trivial"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <!--sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--dao 接口对应的mapper配置文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!--配置mybatis-config：实体类别名，sql打印-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--dao接口没有实现类，需要配置对应的mapper处理器
        配置扫描dao接口包，动态实现dao接口，并且注入到spring容器中
    -->
    <bean id="mapperScan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--dao接口的位置-->
        <property name="basePackage" value="com.wtour.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!--事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启声明式注解管理事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>